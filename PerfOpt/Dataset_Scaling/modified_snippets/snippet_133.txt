//====================================================================================================100\n//====================================================================================================100\n//	RESIZE FUNCTION\n//====================================================================================================100\n//====================================================================================================100\n\nvoid resize(	fp* input, \n					int input_rows,\n					int input_cols,\n					fp* output,\n					int output_rows,\n					int output_cols,\n					int major){\n\n	//================================================================================80\n	//	VARIABLES\n	//================================================================================80\n\n	int i, j;\n	int i2, j2;\n\n	//================================================================================80\n	//	COMPUTATION\n	//================================================================================80 \n\n	//============================================================60\n	//	ROW MAJOR\n	//============================================================60\n\n	if(major == 0){																												// do if data is saved row major\n\n		for(i=0, i2=0; i<output_rows; i++, i2++){\n			if(i2>=input_rows){\n				i2 = i2 - input_rows;\n			}\n			for(j=0, j2=0; j<output_cols; j++, j2++){\n				if(j2>=input_cols){\n					j2 = j2 - input_cols;\n				}\n				output[i*output_cols+j] = input[i2*input_cols+j2];\n			}\n		}\n\n	}\n\n	//============================================================60\n	//	COLUMN MAJOR\n	//============================================================60\n\n	else{																															// do if data is saved column major\n\n		for(j=0, j2=0; j<output_cols; j++, j2++){\n			if(j2>=input_cols){\n				j2 = j2 - input_cols;\n			}\n			for(i=0, i2=0; i<output_rows; i++, i2++){\n				if(i2>=input_rows){\n					i2 = i2 - input_rows;\n				}\n				output[j*output_rows+i] = input[j2*input_rows+i2];\n			}\n		}\n\n	}\n\n}\n