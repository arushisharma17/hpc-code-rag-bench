#include <stdlib.h>\n#include <stdio.h>\n#include <string.h>\n#include <math.h>\n#include <sys/time.h>\n\n#include "backprop.h"\n\n////////////////////////////////////////////////////////////////////////////////\n\nextern void bpnn_layerforward(float *l1, float *l2, float **conn, int n1, int n2);\n\nextern void bpnn_output_error(float *delta, float *target, float *output, int nj, float *err);\n\nextern void bpnn_hidden_error(float *delta_h, int nh, float *delta_o, int no, float **who, float *hidden, float *err);\n\nextern void bpnn_adjust_weights(float *delta, int ndelta, float *ly, int nly, float **w, float **oldw);\n\n\nextern int setup(int argc, char** argv);\n\nextern float **alloc_2d_dbl(int m, int n);\n\nextern float squash(float x);\n\ndouble gettime() {\n  struct timeval t;\n  gettimeofday(&t,NULL);\n  return t.tv_sec+t.tv_usec*1e-6;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Program main\n////////////////////////////////////////////////////////////////////////////////\nint\nmain( int argc, char** argv) \n{\n	setup(argc, argv);\n}\n\n\nvoid bpnn_train_kernel(BPNN *net, float *eo, float *eh)\n{\n  int in, hid, out;\n  float out_err, hid_err;\n  \n  in = net->input_n;\n  hid = net->hidden_n;\n  out = net->output_n;   \n   \n  printf("Performing CPU computation\n");\n  bpnn_layerforward(net->input_units, net->hidden_units,net->input_weights, in, hid);\n  bpnn_layerforward(net->hidden_units, net->output_units, net->hidden_weights, hid, out);\n  bpnn_output_error(net->output_delta, net->target, net->output_units, out, &out_err);\n  bpnn_hidden_error(net->hidden_delta, hid, net->output_delta, out, net->hidden_weights, net->hidden_units, &hid_err);  \n  bpnn_adjust_weights(net->output_delta, out, net->hidden_units, hid, net->hidden_weights, net->hidden_prev_weights);\n  bpnn_adjust_weights(net->hidden_delta, hid, net->input_units, in, net->input_weights, net->input_prev_weights);\n\n}\n