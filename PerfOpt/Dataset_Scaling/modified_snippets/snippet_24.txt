//=====================================================================\n//	MAIN FUNCTION\n//=====================================================================\nfp cam(fp timeinst,\n			fp *initvalu,\n			int initvalu_offset,\n			fp *parameter,\n			int parameter_offset,\n			fp *finavalu,\n			fp Ca){\n\n	//=====================================================================\n	//	VARIABLES\n	//=====================================================================\n\n	// output\n	fp JCa;\n\n	// input data and output data variable references\n	int offset_1;\n	int offset_2;\n	int offset_3;\n	int offset_4;\n	int offset_5;\n	int offset_6;\n	int offset_7;\n	int offset_8;\n	int offset_9;\n	int offset_10;\n	int offset_11;\n	int offset_12;\n	int offset_13;\n	int offset_14;\n	int offset_15;\n\n	// parameter variable references\n	int parameter_offset_1;\n	int parameter_offset_2;\n	int parameter_offset_3;\n	int parameter_offset_4;\n	int parameter_offset_5;\n\n	// decoding input initial values\n	fp CaM;\n	fp Ca2CaM;\n	fp Ca4CaM;\n	fp CaMB;\n	fp Ca2CaMB;\n	fp Ca4CaMB;           \n	fp Pb2;\n	fp Pb;\n	fp Pt;\n	fp Pt2;\n	fp Pa;                            \n	fp Ca4CaN;\n	fp CaMCa4CaN;\n	fp Ca2CaMCa4CaN;\n	fp Ca4CaMCa4CaN;\n\n	// decoding input parameters\n	fp CaMtot;\n	fp Btot;\n	fp CaMKIItot;\n	fp CaNtot;\n	fp PP1tot;\n\n	// constants\n	fp K;																			//\n	fp Mg;																			//\n\n	// Ca/CaM parameters\n	fp Kd02;																		// [uM^2]\n	fp Kd24;																		// [uM^2]\n	fp k20;																			// [s^-1]      \n	fp k02;																			// [uM^-2 s^-1]\n	fp k42;																			// [s^-1]      \n	fp k24;																			// [uM^-2 s^-1]\n\n	// CaM buffering (B) parameters\n	fp k0Boff;																		// [s^-1] \n	fp k0Bon;																		// [uM^-1 s^-1] kon = koff/Kd\n	fp k2Boff;																		// [s^-1] \n	fp k2Bon;																		// [uM^-1 s^-1]\n	fp k4Boff;																		// [s^-1]\n	fp k4Bon;																		// [uM^-1 s^-1]\n\n	// using thermodynamic constraints\n	fp k20B;																		// [s^-1] thermo constraint on loop 1\n	fp k02B;																		// [uM^-2 s^-1] \n	fp k42B;																		// [s^-1] thermo constraint on loop 2\n	fp k24B;																		// [uM^-2 s^-1]\n\n	// Wi Wa Wt Wp\n	fp kbi;																			// [s^-1] (Ca4CaM dissocation from Wb)\n	fp kib;																			// [uM^-1 s^-1]\n	fp kpp1;																		// [s^-1] (PP1-dep dephosphorylation rates)\n	fp Kmpp1;																		// [uM]\n	fp kib2;\n	fp kb2i;\n	fp kb24;\n	fp kb42;\n	fp kta;																			// [s^-1] (Ca4CaM dissociation from Wt)\n	fp kat;																			// [uM^-1 s^-1] (Ca4CaM reassociation with Wa)\n	fp kt42;\n	fp kt24;\n	fp kat2;\n	fp kt2a;\n\n	// CaN parameters\n	fp kcanCaoff;																	// [s^-1] \n	fp kcanCaon;																	// [uM^-1 s^-1] \n	fp kcanCaM4on;																	// [uM^-1 s^-1]\n	fp kcanCaM4off;																	// [s^-1]\n	fp kcanCaM2on;\n	fp kcanCaM2off;\n	fp kcanCaM0on;\n	fp kcanCaM0off;\n	fp k02can;\n	fp k20can;\n	fp k24can;\n	fp k42can;\n\n	// CaM Reaction fluxes\n	fp rcn02;\n	fp rcn24;\n\n	// CaM buffer fluxes\n	fp B;\n	fp rcn02B;\n	fp rcn24B;\n	fp rcn0B;\n	fp rcn2B;\n	fp rcn4B;\n\n	// CaN reaction fluxes \n	fp Ca2CaN;\n	fp rcnCa4CaN;\n	fp rcn02CaN; \n	fp rcn24CaN;\n	fp rcn0CaN;\n	fp rcn2CaN;\n	fp rcn4CaN;\n\n	// CaMKII reaction fluxes\n	fp Pix;\n	fp rcnCKib2;\n	fp rcnCKb2b;\n	fp rcnCKib;\n	fp T;\n	fp kbt;\n	fp rcnCKbt;\n	fp rcnCKtt2;\n	fp rcnCKta;\n	fp rcnCKt2a;\n	fp rcnCKt2b2;\n	fp rcnCKai;\n\n	// CaM equations\n	fp dCaM;\n	fp dCa2CaM;\n	fp dCa4CaM;\n	fp dCaMB;\n	fp dCa2CaMB;\n	fp dCa4CaMB;\n\n	// CaMKII equations\n	fp dPb2;																		// Pb2\n	fp dPb;																			// Pb\n	fp dPt;																			// Pt\n	fp dPt2;																		// Pt2\n	fp dPa;																			// Pa\n\n	// CaN equations\n	fp dCa4CaN;																		// Ca4CaN\n	fp dCaMCa4CaN;																	// CaMCa4CaN\n	fp dCa2CaMCa4CaN;																// Ca2CaMCa4CaN\n	fp dCa4CaMCa4CaN;																// Ca4CaMCa4CaN\n\n	//=====================================================================\n	//	COMPUTATION\n	//=====================================================================\n\n	// input data and output data variable references\n	offset_1  = initvalu_offset;\n	offset_2  = initvalu_offset+1;\n	offset_3  = initvalu_offset+2;\n	offset_4  = initvalu_offset+3;\n	offset_5  = initvalu_offset+4;\n	offset_6  = initvalu_offset+5;\n	offset_7  = initvalu_offset+6;\n	offset_8  = initvalu_offset+7;\n	offset_9  = initvalu_offset+8;\n	offset_10 = initvalu_offset+9;\n	offset_11 = initvalu_offset+10;\n	offset_12 = initvalu_offset+11;\n	offset_13 = initvalu_offset+12;\n	offset_14 = initvalu_offset+13;\n	offset_15 = initvalu_offset+14;\n	\n	// input parameters variable references\n	parameter_offset_1  = parameter_offset;\n	parameter_offset_2  = parameter_offset+1;\n	parameter_offset_3  = parameter_offset+2;\n	parameter_offset_4  = parameter_offset+3;\n	parameter_offset_5  = parameter_offset+4;\n\n	// decoding input array\n	CaM				= initvalu[offset_1];\n	Ca2CaM			= initvalu[offset_2];\n	Ca4CaM			= initvalu[offset_3];\n	CaMB			= initvalu[offset_4];\n	Ca2CaMB			= initvalu[offset_5];\n	Ca4CaMB			= initvalu[offset_6];           \n	Pb2				= initvalu[offset_7];\n	Pb				= initvalu[offset_8];\n	Pt				= initvalu[offset_9];\n	Pt2				= initvalu[offset_10];\n	Pa				= initvalu[offset_11];                            \n	Ca4CaN			= initvalu[offset_12];\n	CaMCa4CaN		= initvalu[offset_13];\n	Ca2CaMCa4CaN	= initvalu[offset_14];\n	Ca4CaMCa4CaN	= initvalu[offset_15];\n\n	// decoding input parameters\n	CaMtot			= parameter[parameter_offset_1];\n	Btot			= parameter[parameter_offset_2];\n	CaMKIItot		= parameter[parameter_offset_3];\n	CaNtot			= parameter[parameter_offset_4];\n	PP1tot			= parameter[parameter_offset_5];\n\n	// values [CONSTANTS FOR ALL THREADS]\n	K = 135;																			//\n	Mg = 1;																				//\n\n	// Ca/CaM parameters\n	if (Mg <= 1){\n		Kd02 = 0.0025*(1+K/0.94-Mg/0.012)*(1+K/8.1+Mg/0.022);							// [uM^2]\n		Kd24 = 0.128*(1+K/0.64+Mg/0.0014)*(1+K/13.0-Mg/0.153);							// [uM^2]\n	}\n	else{\n		Kd02 = 0.0025*(1+K/0.94-1/0.012+(Mg-1)/0.060)*(1+K/8.1+1/0.022+(Mg-1)/0.068);   // [uM^2]\n		Kd24 = 0.128*(1+K/0.64+1/0.0014+(Mg-1)/0.005)*(1+K/13.0-1/0.153+(Mg-1)/0.150);  // [uM^2]\n	}\n	k20 = 10;																			// [s^-1]      \n	k02 = k20/Kd02;																		// [uM^-2 s^-1]\n	k42 = 500;																			// [s^-1]      \n	k24 = k42/Kd24;																		// [uM^-2 s^-1]\n\n	// CaM buffering (B) parameters\n	k0Boff = 0.0014;																	// [s^-1] \n	k0Bon = k0Boff/0.2;																	// [uM^-1 s^-1] kon = koff/Kd\n	k2Boff = k0Boff/100;																// [s^-1] \n	k2Bon = k0Bon;																		// [uM^-1 s^-1]\n	k4Boff = k2Boff;																	// [s^-1]\n	k4Bon = k0Bon;																		// [uM^-1 s^-1]\n\n	// using thermodynamic constraints\n	k20B = k20/100;																		// [s^-1] thermo constraint on loop 1\n	k02B = k02;																			// [uM^-2 s^-1] \n	k42B = k42;																			// [s^-1] thermo constraint on loop 2\n	k24B = k24;																			// [uM^-2 s^-1]\n\n	// Wi Wa Wt Wp\n	kbi = 2.2;																			// [s^-1] (Ca4CaM dissocation from Wb)\n	kib = kbi/33.5e-3;																	// [uM^-1 s^-1]\n	kpp1 = 1.72;																		// [s^-1] (PP1-dep dephosphorylation rates)\n	Kmpp1 = 11.5;																		// [uM]\n	kib2 = kib;\n	kb2i = kib2*5;\n	kb24 = k24;\n	kb42 = k42*33.5e-3/5;\n	kta = kbi/1000;																		// [s^-1] (Ca4CaM dissociation from Wt)\n	kat = kib;																			// [uM^-1 s^-1] (Ca4CaM reassociation with Wa)\n	kt42 = k42*33.5e-6/5;\n	kt24 = k24;\n	kat2 = kib;\n	kt2a = kib*5;\n\n	// CaN parameters\n	kcanCaoff = 1;																		// [s^-1] \n	kcanCaon = kcanCaoff/0.5;															// [uM^-1 s^-1] \n	kcanCaM4on = 46;																	// [uM^-1 s^-1]\n	kcanCaM4off = 0.0013;																// [s^-1]\n	kcanCaM2on = kcanCaM4on;\n	kcanCaM2off = 2508*kcanCaM4off;\n	kcanCaM0on = kcanCaM4on;\n	kcanCaM0off = 165*kcanCaM2off;\n	k02can = k02;\n	k20can = k20/165;\n	k24can = k24;\n	k42can = k20/2508;\n\n	// CaM Reaction fluxes\n	rcn02 = k02*pow(Ca,2)*CaM - k20*Ca2CaM;\n	rcn24 = k24*pow(Ca,2)*Ca2CaM - k42*Ca4CaM;\n	\n	// CaM buffer fluxes\n	B = Btot - CaMB - Ca2CaMB - Ca4CaMB;\n	rcn02B = k02B*pow(Ca,2)*CaMB - k20B*Ca2CaMB;\n	rcn24B = k24B*pow(Ca,2)*Ca2CaMB - k42B*Ca4CaMB;\n	rcn0B = k0Bon*CaM*B - k0Boff*CaMB;\n	rcn2B = k2Bon*Ca2CaM*B - k2Boff*Ca2CaMB;\n	rcn4B = k4Bon*Ca4CaM*B - k4Boff*Ca4CaMB;\n	\n	// CaN reaction fluxes \n	Ca2CaN = CaNtot - Ca4CaN - CaMCa4CaN - Ca2CaMCa4CaN - Ca4CaMCa4CaN;\n	rcnCa4CaN = kcanCaon*pow(Ca,2)*Ca2CaN - kcanCaoff*Ca4CaN;\n	rcn02CaN = k02can*pow(Ca,2)*CaMCa4CaN - k20can*Ca2CaMCa4CaN; \n	rcn24CaN = k24can*pow(Ca,2)*Ca2CaMCa4CaN - k42can*Ca4CaMCa4CaN;\n	rcn0CaN = kcanCaM0on*CaM*Ca4CaN - kcanCaM0off*CaMCa4CaN;\n	rcn2CaN = kcanCaM2on*Ca2CaM*Ca4CaN - kcanCaM2off*Ca2CaMCa4CaN;\n	rcn4CaN = kcanCaM4on*Ca4CaM*Ca4CaN - kcanCaM4off*Ca4CaMCa4CaN;\n\n	// CaMKII reaction fluxes\n	Pix = 1 - Pb2 - Pb - Pt - Pt2 - Pa;\n	rcnCKib2 = kib2*Ca2CaM*Pix - kb2i*Pb2;\n	rcnCKb2b = kb24*pow(Ca,2)*Pb2 - kb42*Pb;\n	rcnCKib = kib*Ca4CaM*Pix - kbi*Pb;\n	T = Pb + Pt + Pt2 + Pa;\n	kbt = 0.055*T + 0.0074*pow(T,2) + 0.015*pow(T,3);\n	rcnCKbt = kbt*Pb - kpp1*PP1tot*Pt/(Kmpp1+CaMKIItot*Pt);\n	rcnCKtt2 = kt42*Pt - kt24*pow(Ca,2)*Pt2;\n	rcnCKta = kta*Pt - kat*Ca4CaM*Pa;\n	rcnCKt2a = kt2a*Pt2 - kat2*Ca2CaM*Pa;\n	rcnCKt2b2 = kpp1*PP1tot*Pt2/(Kmpp1+CaMKIItot*Pt2);\n	rcnCKai = kpp1*PP1tot*Pa/(Kmpp1+CaMKIItot*Pa);\n\n	// CaM equations\n	dCaM = 1e-3*(-rcn02 - rcn0B - rcn0CaN);\n	dCa2CaM = 1e-3*(rcn02 - rcn24 - rcn2B - rcn2CaN + CaMKIItot*(-rcnCKib2 + rcnCKt2a) );\n	dCa4CaM = 1e-3*(rcn24 - rcn4B - rcn4CaN + CaMKIItot*(-rcnCKib+rcnCKta) );\n	dCaMB = 1e-3*(rcn0B-rcn02B);\n	dCa2CaMB = 1e-3*(rcn02B + rcn2B - rcn24B);\n	dCa4CaMB = 1e-3*(rcn24B + rcn4B);\n\n	// CaMKII equations\n	dPb2 = 1e-3*(rcnCKib2 - rcnCKb2b + rcnCKt2b2);										// Pb2\n	dPb = 1e-3*(rcnCKib + rcnCKb2b - rcnCKbt);											// Pb\n	dPt = 1e-3*(rcnCKbt-rcnCKta-rcnCKtt2);												// Pt\n	dPt2 = 1e-3*(rcnCKtt2-rcnCKt2a-rcnCKt2b2);											// Pt2\n	dPa = 1e-3*(rcnCKta+rcnCKt2a-rcnCKai);												// Pa\n\n	// CaN equations\n	dCa4CaN = 1e-3*(rcnCa4CaN - rcn0CaN - rcn2CaN - rcn4CaN);							// Ca4CaN\n	dCaMCa4CaN = 1e-3*(rcn0CaN - rcn02CaN);												// CaMCa4CaN\n	dCa2CaMCa4CaN = 1e-3*(rcn2CaN+rcn02CaN-rcn24CaN);									// Ca2CaMCa4CaN\n	dCa4CaMCa4CaN = 1e-3*(rcn4CaN+rcn24CaN);											// Ca4CaMCa4CaN\n\n	// encode output array\n	finavalu[offset_1] = dCaM;\n	finavalu[offset_2] = dCa2CaM;\n	finavalu[offset_3] = dCa4CaM;\n	finavalu[offset_4] = dCaMB;\n	finavalu[offset_5] = dCa2CaMB;\n	finavalu[offset_6] = dCa4CaMB;\n	finavalu[offset_7] = dPb2;\n	finavalu[offset_8] = dPb;\n	finavalu[offset_9] = dPt;\n	finavalu[offset_10] = dPt2;\n	finavalu[offset_11] = dPa;\n	finavalu[offset_12] = dCa4CaN;\n	finavalu[offset_13] = dCaMCa4CaN;\n	finavalu[offset_14] = dCa2CaMCa4CaN;\n	finavalu[offset_15] = dCa4CaMCa4CaN;\n\n	// write to global variables for adjusting Ca buffering in EC coupling model\n	JCa = 1e-3*(2*CaMKIItot*(rcnCKtt2-rcnCKb2b) - 2*(rcn02+rcn24+rcn02B+rcn24B+rcnCa4CaN+rcn02CaN+rcn24CaN)); // [uM/msec]\n\n	// return\n	return JCa;\n\n}\n