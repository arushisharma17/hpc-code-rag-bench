\n/**************************************************************************\n**\n** Copyright (C) 1993 David E. Steward & Zbigniew Leyk, all rights reserved.\n**\n**			     Meschach Library\n** \n** This Meschach Library is provided "as is" without any express \n** or implied warranty of any kind with respect to this software. \n** In particular the authors shall not be liable for any direct, \n** indirect, special, incidental or consequential damages arising \n** in any way from use of the software.\n** \n** Everyone is granted permission to copy, modify and redistribute this\n** Meschach Library, provided:\n**  1.  All copies contain this copyright notice.\n**  2.  All modified copies shall carry a notice stating who\n**      made the last modification and the date of such modification.\n**  3.  No charge is made for this software or works derived from it.  \n**      This clause shall not be construed as constraining other software\n**      distributed on the same medium as this software, nor is a\n**      distribution fee considered a charge.\n**\n***************************************************************************/\n\n/* iotort.c  10/11/93 */\n/* test of I/O functions */\n\n\nstatic char rcsid[] = "$Id: $";\n\n#include "sparse.h"\n#include "zmatrix.h"\n\n\n#define	errmesg(mesg)	printf("Error: %s error: line %d\n",mesg,__LINE__)\n#define notice(mesg)	printf("# Testing %s...\n",mesg);\n\n\nvoid main()\n{\n   VEC *x;\n   MAT *A;\n   PERM *pivot;\n   IVEC *ix;\n   SPMAT *spA;\n   ZVEC *zx;\n   ZMAT *ZA;\n   char yes;\n   int i;\n   FILE *fp;\n\n   mem_info_on(TRUE);\n\n   if ((fp = fopen("iotort.dat","w")) == NULL) {\n      printf(" !!! Cannot open file %s for writing\n\n","iotort.dat");\n      exit(1);\n   }\n     \n   x = v_get(10);\n   A = m_get(3,3);\n   zx = zv_get(10);\n   ZA = zm_get(3,3);\n   pivot = px_get(10);\n   ix = iv_get(10);\n   spA = sp_get(3,3,2);\n\n   v_rand(x);\n   m_rand(A);\n   zv_rand(zx);\n   zm_rand(ZA);\n   px_ident(pivot);\n   for (i=0; i < 10; i++)\n     ix->ive[i] = i+1;\n   for (i=0; i < spA->m; i++) {\n      sp_set_val(spA,i,i,1.0);\n      if (i > 0) sp_set_val(spA,i-1,i,-1.0);\n   }\n\n   notice(" VEC output");\n   v_foutput(fp,x);\n   notice(" MAT output");\n   m_foutput(fp,A);\n   notice(" ZVEC output");\n   zv_foutput(fp,zx);\n   notice(" ZMAT output");\n   zm_foutput(fp,ZA);\n   notice(" PERM output");\n   px_foutput(fp,pivot);\n   notice(" IVEC output");\n   iv_foutput(fp,ix);\n   notice(" SPMAT output");\n   sp_foutput(fp,spA);\n   fprintf(fp,"Y");\n   fclose(fp);\n\n   printf("\nENTER SOME VALUES:\n\n");\n\n   if ((fp = fopen("iotort.dat","r")) == NULL) {\n      printf(" !!! Cannot open file %s for reading\n\n","iotort.dat");\n      exit(1);\n   }\n\n   notice(" VEC input/output");\n   x = v_finput(fp,x);\n   v_output(x);\n\n   notice(" MAT input/output");\n   A = m_finput(fp,A);\n   m_output(A);\n\n   notice(" ZVEC input/output");\n   zx = zv_finput(fp,zx);\n   zv_output(zx);\n\n   notice(" ZMAT input/output");\n   ZA = zm_finput(fp,ZA);\n   zm_output(ZA);\n\n   notice(" PERM input/output");\n   pivot = px_finput(fp,pivot);\n   px_output(pivot);\n\n   notice(" IVEC input/output");\n   ix = iv_finput(fp,ix);\n   iv_output(ix);\n\n   notice(" SPMAT input/output");\n   SP_FREE(spA);\n   spA = sp_finput(fp);\n   sp_output(spA);\n\n   notice(" general input");\n   finput(fp," finish the test?  ","%c",&yes);\n   if (yes == 'y' || yes == 'Y' )\n     printf(" YES\n");\n   else printf(" NO\n");\n   fclose(fp);\n\n   mem_info();\n}\n