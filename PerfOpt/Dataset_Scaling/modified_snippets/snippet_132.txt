//====================================================================================================100\n//====================================================================================================100\n//	INCLUDE/DEFINE\n//====================================================================================================100\n//====================================================================================================100\n\n// #include <stdlib.h>\n// #include <string.h>\n#include <stdio.h>\n// #include <math.h>\n// #include <time.h>\n// #include <sys/types.h>\n// #include <dirent.h>\n// #include <errno.h>\n\n//====================================================================================================100\n//====================================================================================================100\n//	WRITE FUNCTION\n//====================================================================================================100\n//====================================================================================================100\n\nvoid write_graphics(	char* filename,\n									fp* input, \n									int data_rows, \n									int data_cols, \n									int major,\n									int data_range){\n\n	//================================================================================80\n	//	VARIABLES\n	//================================================================================80\n\n	FILE* fid;\n	int i, j;\n\n	//================================================================================80\n	//	CREATE/OPEN FILE FOR WRITING\n	//================================================================================80\n\n	fid = fopen(filename, "w");\n	if( fid == NULL ){\n		printf( "The file was not created/opened for writing\n" );\n		return;\n	}\n\n	//================================================================================80\n	//	WRITE PGM FILE HEADER\n	//================================================================================80\n\n	fprintf(fid, "P2\n");\n	fprintf(fid, "%d %d\n", data_cols, data_rows);\n	fprintf(fid, "%d\n", data_range);\n\n	//================================================================================80\n	//	WRITE VALUES TO THE FILE\n	//================================================================================80\n\n	// if matrix is saved row major in memory (C)\n	if(major==0){\n		for(i=0; i<data_rows; i++){\n			for(j=0; j<data_cols; j++){\n				fprintf(fid, "%d ", (int)input[i*data_cols+j]);\n			}\n			fprintf(fid, "\n");\n		}\n	}\n	// if matrix is saved column major in memory (MATLAB)\n	else{\n		for(i=0; i<data_rows; i++){\n			for(j=0; j<data_cols; j++){\n				fprintf(fid, "%d ", (int)input[j*data_rows+i]);\n			}\n			fprintf(fid, "\n");\n		}\n	}\n\n	//================================================================================80\n	//	CLOSE FILE\n	//================================================================================80\n\n	fclose(fid);\n\n}\n\n//====================================================================================================100\n//====================================================================================================100\n//	READ FUNCTION\n//====================================================================================================100\n//====================================================================================================100\n\nvoid read_graphics(	char* filename,\n									fp* input,\n									int data_rows, \n									int data_cols,\n									int major){\n\n	//================================================================================80\n	//	VARIABLES\n	//================================================================================80\n\n	FILE* fid;\n	int i, j;\n	char c;\n	int temp;\n\n	//================================================================================80\n	//	OPEN FILE FOR READING\n	//================================================================================80\n\n	fid = fopen(filename, "r");\n	if( fid == NULL ){\n		printf( "The file was not opened for reading\n" );\n		return;\n	}\n\n	//================================================================================80\n	//	SKIP PGM FILE HEADER\n	//================================================================================80\n\n	i = 0;\n	while(i<3){\n		c = fgetc(fid);\n		if(c == '\n'){\n			i = i+1;\n		}\n	};\n\n	//================================================================================80\n	//	READ VALUES FROM THE FILE\n	//================================================================================80\n\n	if(major==0){																// if matrix is saved row major in memory (C)\n		for(i=0; i<data_rows; i++){\n			for(j=0; j<data_cols; j++){\n				fscanf(fid, "%d", &temp);\n				input[i*data_cols+j] = (fp)temp;\n			}\n		}\n	}\n	else{																				// if matrix is saved column major in memory (MATLAB)\n		for(i=0; i<data_rows; i++){\n			for(j=0; j<data_cols; j++){\n				fscanf(fid, "%d", &temp);\n				input[j*data_rows+i] = (fp)temp;\n			}\n		}\n	}\n\n	//================================================================================80\n	//	CLOSE FILE\n	//================================================================================80\n\n	fclose(fid);\n\n}\n