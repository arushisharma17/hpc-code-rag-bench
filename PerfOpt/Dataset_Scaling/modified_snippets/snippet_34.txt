#include <stdio.h>\n#include <stdlib.h>\n#include <math.h>\n#include "backprop.h"\n#include "omp.h"\n\nextern char *strcpy();\nextern void exit();\n\nint layer_size = 0;\n\nbackprop_face()\n{\n  BPNN *net;\n  int i;\n  float out_err, hid_err;\n  net = bpnn_create(layer_size, 16, 1); // (16, 1 can not be changed)\n  printf("Input layer size : %d\n", layer_size);\n  load(net);\n  //entering the training kernel, only one iteration\n  printf("Starting training kernel\n");\n  bpnn_train_kernel(net, &out_err, &hid_err);\n  bpnn_free(net);\n  printf("Training done\n");\n}\n\nint setup(argc, argv)\nint argc;\nchar *argv[];\n{\n  if(argc!=2){\n  fprintf(stderr, "usage: backprop <num of input elements>\n");\n  exit(0);\n  }\n\n  layer_size = atoi(argv[1]);\n  \n  int seed;\n\n  seed = 7;   \n  bpnn_initialize(seed);\n  backprop_face();\n\n  exit(0);\n}\n