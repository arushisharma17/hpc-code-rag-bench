//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n//	DEFINE / INCLUDE\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n\n#define fp float\n#define ENDO_POINTS 20\n#define EPI_POINTS 31\n#define ALL_POINTS 51\n\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n//	PUBLIC_STRUCT\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n\ntypedef struct public_struct{\n\n	//======================================================================================================================================================\n	//	WHAT USED TO BE INPUTS FROM MATLAB\n	//======================================================================================================================================================\n\n	int tSize;\n	int sSize;\n	int maxMove;\n	fp alpha;\n\n	int endoPoints;\n	int d_endo_mem;\n	int* d_endoRow;\n	int* d_endoCol;\n	int* d_tEndoRowLoc;\n	int* d_tEndoColLoc;\n	fp* d_endoT;\n\n	int epiPoints;\n	int d_epi_mem;\n	int* d_epiRow;\n	int* d_epiCol;\n	int* d_tEpiRowLoc;\n	int* d_tEpiColLoc;\n	fp* d_epiT;\n\n	int allPoints;\n\n	//======================================================================================================================================================\n	//	FRAME\n	//======================================================================================================================================================\n\n	avi_t* d_frames;\n	int frames;\n	int frame_no;\n	fp* d_frame;\n	int frame_rows;\n	int frame_cols;\n	int frame_elem;\n	int frame_mem;\n\n	//======================================================================================================================================================\n	// 	INPUT 2\n	//======================================================================================================================================================\n\n	int in2_rows;\n	int in2_cols;\n	int in2_elem;\n	int in2_mem;\n\n	//======================================================================================================================================================\n	//	INPUT\n	//======================================================================================================================================================\n\n	int in_mod_rows;\n	int in_mod_cols;\n	int in_mod_elem;\n	int in_mod_mem;\n\n	//======================================================================================================================================================\n	//	CONVOLUTION\n	//======================================================================================================================================================\n\n	int ioffset;\n	int joffset;\n\n	int conv_rows;\n	int conv_cols;\n	int conv_elem;\n	int conv_mem;\n\n	//======================================================================================================================================================\n	//	CUMULATIVE SUM 1\n	//======================================================================================================================================================\n\n	//====================================================================================================\n	//	PAD ARRAY\n	//====================================================================================================\n	//====================================================================================================\n	//	VERTICAL CUMULATIVE SUM\n	//====================================================================================================\n\n	int in2_pad_add_rows;\n	int in2_pad_add_cols;\n\n	int in2_pad_rows;\n	int in2_pad_cols;\n	int in2_pad_elem;\n	int in2_pad_mem;\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n	//====================================================================================================\n	//	HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n\n	int in2_pad_cumv_sel_rowlow;\n	int in2_pad_cumv_sel_rowhig;\n	int in2_pad_cumv_sel_collow;\n	int in2_pad_cumv_sel_colhig;\n\n	int in2_pad_cumv_sel2_rowlow;\n	int in2_pad_cumv_sel2_rowhig;\n	int in2_pad_cumv_sel2_collow;\n	int in2_pad_cumv_sel2_colhig;\n\n	int in2_sub_rows;\n	int in2_sub_cols;\n	int in2_sub_elem;\n	int in2_sub_mem;\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, SQUARE, NUMERATOR\n	//====================================================================================================\n\n	int in2_sub_cumh_sel_rowlow;\n	int in2_sub_cumh_sel_rowhig;\n	int in2_sub_cumh_sel_collow;\n	int in2_sub_cumh_sel_colhig;\n\n	int in2_sub_cumh_sel2_rowlow;\n	int in2_sub_cumh_sel2_rowhig;\n	int in2_sub_cumh_sel2_collow;\n	int in2_sub_cumh_sel2_colhig;\n\n	int in2_sub2_sqr_rows;\n	int in2_sub2_sqr_cols;\n	int in2_sub2_sqr_elem;\n	int in2_sub2_sqr_mem;\n\n	//======================================================================================================================================================\n	//	CUMULATIVE SUM 2\n	//======================================================================================================================================================\n\n	//====================================================================================================\n	//	PAD ARRAY\n	//====================================================================================================\n	//====================================================================================================\n	//	VERTICAL CUMULATIVE SUM\n	//====================================================================================================\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION\n	//====================================================================================================\n	//====================================================================================================\n	//	HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, DIFFERENTIAL LOCAL SUM, DENOMINATOR A, DENOMINATOR, CORRELATION\n	//====================================================================================================\n\n	//======================================================================================================================================================\n	//	TEMPLATE MASK CREATE\n	//======================================================================================================================================================\n\n	int tMask_rows;\n	int tMask_cols;\n	int tMask_elem;\n	int tMask_mem;\n\n	//======================================================================================================================================================\n	//	POINT MASK INITIALIZE\n	//======================================================================================================================================================\n\n	int mask_rows;\n	int mask_cols;\n	int mask_elem;\n	int mask_mem;\n\n	//======================================================================================================================================================\n	//	MASK CONVOLUTION\n	//======================================================================================================================================================\n\n	int mask_conv_rows;\n	int mask_conv_cols;\n	int mask_conv_elem;\n	int mask_conv_mem;\n	int mask_conv_ioffset;\n	int mask_conv_joffset;\n\n}public_struct;\n\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n//	PRIVATE_STRUCT\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n\ntypedef struct private_struct{\n\n	//======================================================================================================================================================\n	//	POINT-SPECIFIC\n	//======================================================================================================================================================\n\n	int point_no;\n	int in_pointer;\n\n	int* d_Row;\n	int* d_Col;\n	int* d_tRowLoc;\n	int* d_tColLoc;\n	fp* d_T;\n\n	//======================================================================================================================================================\n	// 	INPUT 2\n	//======================================================================================================================================================\n\n	fp* d_in2;\n	fp* d_in2_sqr;\n\n	//======================================================================================================================================================\n	//	INPUT\n	//======================================================================================================================================================\n\n	fp* d_in_mod;\n	fp* d_in_sqr;\n\n	//======================================================================================================================================================\n	//	CONVOLUTION\n	//======================================================================================================================================================\n\n	fp* d_conv;\n\n	//======================================================================================================================================================\n	//	CUMULATIVE SUM 1\n	//======================================================================================================================================================\n\n	//====================================================================================================\n	//	PAD ARRAY\n	//====================================================================================================\n	//====================================================================================================\n	//	VERTICAL CUMULATIVE SUM\n	//====================================================================================================\n\n	fp* d_in2_pad;\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n	//====================================================================================================\n	//	HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n\n	fp* d_in2_sub;\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, SQUARE, NUMERATOR\n	//====================================================================================================\n\n	fp* d_in2_sub2_sqr;\n\n	//======================================================================================================================================================\n	//	CUMULATIVE SUM 2\n	//======================================================================================================================================================\n\n	//====================================================================================================\n	//	PAD ARRAY\n	//====================================================================================================\n	//====================================================================================================\n	//	VERTICAL CUMULATIVE SUM\n	//====================================================================================================\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION\n	//====================================================================================================\n	//====================================================================================================\n	//	HORIZONTAL CUMULATIVE SUM\n	//====================================================================================================\n\n	//====================================================================================================\n	//	SELECTION, SELECTION 2, SUBTRACTION, DIFFERENTIAL LOCAL SUM, DENOMINATOR A, DENOMINATOR, CORRELATION\n	//====================================================================================================\n\n	//======================================================================================================================================================\n	//	TEMPLATE MASK CREATE\n	//======================================================================================================================================================\n\n	fp* d_tMask;\n\n	//======================================================================================================================================================\n	//	POINT MASK INITIALIZE\n	//======================================================================================================================================================\n\n	//======================================================================================================================================================\n	//	MASK CONVOLUTION\n	//======================================================================================================================================================\n\n	fp* d_mask_conv;\n\n	//======================================================================================================================================================\n	//	SUM\n	//======================================================================================================================================================\n\n	fp* in_partial_sum;\n	fp* in_sqr_partial_sum;\n	fp* par_max_val;\n	int* par_max_coo;\n\n} private_struct;\n\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n//	END OF STRUCTURE\n//===============================================================================================================================================================================================================\n//===============================================================================================================================================================================================================\n