//=====================================================================\n//	MAIN FUNCTION\n//=====================================================================\nvoid fin(	fp *initvalu,\n				int initvalu_offset_ecc,\n				int initvalu_offset_Dyad,\n				int initvalu_offset_SL,\n				int initvalu_offset_Cyt,\n				fp *parameter,\n				fp *finavalu,\n				fp JCaDyad,\n				fp JCaSL,\n				fp JCaCyt){\n\n//=====================================================================\n//	VARIABLES\n//=====================================================================\n\n	// decoded input parameters\n	fp BtotDyad;																		//\n	fp CaMKIItotDyad;																	//\n\n	// compute variables\n	fp Vmyo;																			// [L]\n	fp Vdyad;																			// [L]\n	fp VSL;																				// [L]\n	fp kDyadSL;																			// [L/msec]\n	fp kSLmyo;																			// [L/msec]\n	fp k0Boff;																			// [s^-1] \n	fp k0Bon;																			// [uM^-1 s^-1] kon = koff/Kd\n	fp k2Boff;																			// [s^-1] \n	fp k2Bon;																			// [uM^-1 s^-1]\n	fp k4Boff;																			// [s^-1]\n	fp k4Bon;																			// [uM^-1 s^-1]\n	fp CaMtotDyad;\n	fp Bdyad;																			// [uM dyad]\n	fp J_cam_dyadSL;																	// [uM/msec dyad]\n	fp J_ca2cam_dyadSL;																	// [uM/msec dyad]\n	fp J_ca4cam_dyadSL;																	// [uM/msec dyad]\n	fp J_cam_SLmyo;																		// [umol/msec]\n	fp J_ca2cam_SLmyo;																	// [umol/msec]\n	fp J_ca4cam_SLmyo;																	// [umol/msec]\n\n//=====================================================================\n//	COMPUTATION\n//=====================================================================\n\n	// decoded input parameters\n	BtotDyad      = parameter[2];														//\n	CaMKIItotDyad = parameter[3];														//\n\n	// set variables\n	Vmyo = 2.1454e-11;																	// [L]\n	Vdyad = 1.7790e-14;																	// [L]\n	VSL = 6.6013e-13;																	// [L]\n	kDyadSL = 3.6363e-16;																// [L/msec]\n	kSLmyo = 8.587e-15;																	// [L/msec]\n	k0Boff = 0.0014;																	// [s^-1] \n	k0Bon = k0Boff/0.2;																	// [uM^-1 s^-1] kon = koff/Kd\n	k2Boff = k0Boff/100;																// [s^-1] \n	k2Bon = k0Bon;																		// [uM^-1 s^-1]\n	k4Boff = k2Boff;																	// [s^-1]\n	k4Bon = k0Bon;																		// [uM^-1 s^-1]\n\n	// ADJUST ECC incorporate Ca buffering from CaM, convert JCaCyt from uM/msec to mM/msec\n	finavalu[initvalu_offset_ecc+35] = finavalu[initvalu_offset_ecc+35] + 1e-3*JCaDyad;\n	finavalu[initvalu_offset_ecc+36] = finavalu[initvalu_offset_ecc+36] + 1e-3*JCaSL;\n	finavalu[initvalu_offset_ecc+37] = finavalu[initvalu_offset_ecc+37] + 1e-3*JCaCyt; \n\n	// incorporate CaM diffusion between compartments\n	CaMtotDyad = initvalu[initvalu_offset_Dyad+0]\n			   + initvalu[initvalu_offset_Dyad+1]\n			   + initvalu[initvalu_offset_Dyad+2]\n			   + initvalu[initvalu_offset_Dyad+3]\n			   + initvalu[initvalu_offset_Dyad+4]\n			   + initvalu[initvalu_offset_Dyad+5]\n			   + CaMKIItotDyad * (  initvalu[initvalu_offset_Dyad+6]\n								  + initvalu[initvalu_offset_Dyad+7]\n								  + initvalu[initvalu_offset_Dyad+8]\n								  + initvalu[initvalu_offset_Dyad+9])\n			   + initvalu[initvalu_offset_Dyad+12]\n			   + initvalu[initvalu_offset_Dyad+13]\n			   + initvalu[initvalu_offset_Dyad+14];\n	Bdyad = BtotDyad - CaMtotDyad;																				// [uM dyad]\n	J_cam_dyadSL = 1e-3 * (  k0Boff*initvalu[initvalu_offset_Dyad+0] - k0Bon*Bdyad*initvalu[initvalu_offset_SL+0]);			// [uM/msec dyad]\n	J_ca2cam_dyadSL = 1e-3 * (  k2Boff*initvalu[initvalu_offset_Dyad+1] - k2Bon*Bdyad*initvalu[initvalu_offset_SL+1]);		// [uM/msec dyad]\n	J_ca4cam_dyadSL = 1e-3 * (  k2Boff*initvalu[initvalu_offset_Dyad+2] - k4Bon*Bdyad*initvalu[initvalu_offset_SL+2]);		// [uM/msec dyad]\n	\n	J_cam_SLmyo = kSLmyo * (  initvalu[initvalu_offset_SL+0] - initvalu[initvalu_offset_Cyt+0]);								// [umol/msec]\n	J_ca2cam_SLmyo = kSLmyo * (  initvalu[initvalu_offset_SL+1] - initvalu[initvalu_offset_Cyt+1]);							// [umol/msec]\n	J_ca4cam_SLmyo = kSLmyo * (  initvalu[initvalu_offset_SL+2] - initvalu[initvalu_offset_Cyt+2]);							// [umol/msec]\n	\n	// ADJUST CAM Dyad \n	finavalu[initvalu_offset_Dyad+0] = finavalu[initvalu_offset_Dyad+0] - J_cam_dyadSL;\n	finavalu[initvalu_offset_Dyad+1] = finavalu[initvalu_offset_Dyad+1] - J_ca2cam_dyadSL;\n	finavalu[initvalu_offset_Dyad+2] = finavalu[initvalu_offset_Dyad+2] - J_ca4cam_dyadSL;\n	\n	// ADJUST CAM Sl\n	finavalu[initvalu_offset_SL+0] = finavalu[initvalu_offset_SL+0] + J_cam_dyadSL*Vdyad/VSL - J_cam_SLmyo/VSL;\n	finavalu[initvalu_offset_SL+1] = finavalu[initvalu_offset_SL+1] + J_ca2cam_dyadSL*Vdyad/VSL - J_ca2cam_SLmyo/VSL;\n	finavalu[initvalu_offset_SL+2] = finavalu[initvalu_offset_SL+2] + J_ca4cam_dyadSL*Vdyad/VSL - J_ca4cam_SLmyo/VSL;\n\n	// ADJUST CAM Cyt \n	finavalu[initvalu_offset_Cyt+0] = finavalu[initvalu_offset_Cyt+0] + J_cam_SLmyo/Vmyo;\n	finavalu[initvalu_offset_Cyt+1] = finavalu[initvalu_offset_Cyt+1] + J_ca2cam_SLmyo/Vmyo;\n	finavalu[initvalu_offset_Cyt+2] = finavalu[initvalu_offset_Cyt+2] + J_ca4cam_SLmyo/Vmyo;\n\n}\n